<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd



		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
       default-autowire="byName" default-lazy-init="true">



	<!-- **************** druid 监控连接池配置 ***************** https://github.com/alibaba/druid/wiki -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url">
			<value>
				${jdbc.druid.url}
			</value>
		</property>
		<property name="username">
			<value>${jdbc.druid.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.druid.password}</value>
            <!--<value>${jdbc.druid.password}</value>-->
		</property>
		<property name="filters">
			<value>${jdbc.druid.filters}</value>
		</property>
		<property name="maxActive">
			<value>${jdbc.druid.maxActive}</value>
		</property>
		<property name="initialSize">
			<value>${jdbc.druid.initialSize}</value>
		</property>
		<property name="maxWait">
			<value>${jdbc.druid.maxWait}</value>
		</property>
		<property name="minIdle">
			<value>${jdbc.druid.minIdle}</value>
		</property>
		<property name="timeBetweenEvictionRunsMillis">
			<value>${jdbc.druid.timeBetweenEvictionRunsMillis}
			</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>${jdbc.druid.minEvictableIdleTimeMillis}
			</value>
		</property>
		<property name="validationQuery">
			<value>${jdbc.druid.validationQuery}</value>
		</property>
		<property name="testWhileIdle">
			<value>${jdbc.druid.testWhileIdle}</value>
		</property>
		<property name="testOnBorrow">
			<value>${jdbc.druid.testOnBorrow}</value>
		</property>
		<property name="testOnReturn">
			<value>${jdbc.druid.testOnReturn}</value>
		</property>
		<property name="poolPreparedStatements">
			<value>${jdbc.druid.poolPreparedStatements}</value>
		</property>
		<property name="maxOpenPreparedStatements">
			<value>${jdbc.druid.maxOpenPreparedStatements}</value>
		</property>
	</bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="globalRollbackOnParticipationFailure" value="true" /> 
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<!-- myBatis文件 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="bsqlSessionFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:META-INF/mybatis/mybatis-config.xml" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath:META-INF/mybatis/mapping/**/*.xml" />
		<property name="typeAliasesPackage" value="mvc.dal.dao" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="mvc.dal.dao" />
		<!--<property name="annotationClass" value="com.weidai.bwcrm.annotation.MybatisMapper" />-->
		<property name="sqlSessionFactoryBeanName" value="bsqlSessionFactory"/>
	</bean>

</beans>
